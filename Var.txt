//------------------------Указатели------------------------\\

/*

Темп указатели

Контрол, боковая панель, окно скриптов

Главное окно

*/

win temp_w[10], main_w[3], emul_o;

string txt_temp[2], emul_name = "Warrior";

//-------------Временные переменные, таймеры---------------\\

//                                                      счетчики ресурсов для крафта копья
int x_ar[40], y_ar[40], x_t[5], y_t[5], x, y, wood = 0, stone = 0;

//--------------------------Флаги--------------------------\\

//  старт бота     , наличие копья в инвентарe, складывание ресурсов, проверка снаряжения, рестарт      , преревызов функции воина, корды сундука = корды персонажа
int f_start_bot = 0, f_spear_inv_av = 0       , f_fold_res = 0      , f_equip = 0        , f_restart = 0, f_recall_warrior = 0    , f_ucord = 0;

//  нажата не нажата клавиша атаки, зажатие клавиши подхода к сундукам, входит ли найденный сундук в тек. радиус поиска, выход в таймер по время записи инструкций 
int f_mouse_at = 0                , f_mouse_mv = 0                    , f_mch = 0                                      , f_open_file = 0;

//--------------------------Прочее--------------------------\\

//  тек и пред. координаты сундука, направления движения в локации сундуков
int xg[2], yg[2]                  , av_route[4];

initialarray(#xg[0], 0); initialarray(#yg[0], 0); initialarray(#av_route[0], 0);

//  блокировка повт зажатия/отпускания, направление движения, сброс av_route, убитые мобы   , сброс корд. пред. сундука
int rep_move = 0                      , traf_side = 0       , sit_c = 0     , killed_mob = 0, res_c = 0;

//  счетчик сундуков, счетчик смены направлений, сколько локацй залутали, сколько осталось, нужно сменить клеток для пустого сундука
int em_chest = 0    , turn_c = 0               , loc_farm_nt = 0        , loc_farm_l = 0  , change_title = 2;

//  при 4 полных сундуках подряд - останавливаем бота
int fl_chest_ct = 0;

//------------------------Константы-------------------------\\

//  координаты колеса движения (скрипты)
int wh_c[2] = {230, 760};

// получить имя пользователя для редактирования скриптов в папке нокс
tmp_i[0] = sizearray(buffer_i);

GetUserName(address(#buffer_i[0]), address(#tmp_i[0]));

string UserName = format(#buffer_i[0]);

//  любые одиночные    , снаряжение        , позиция спавна    , события           , еда/вода          , мусор             , хил
int Image_q[24][50][50], Image_w[5][50][50], Image_e[4][50][50], Image_r[5][50][50], Image_t[6][50][50], Image_y[6][50][50], Image_u[3][50][50];

//     имена групп картинок
string m_namei[7] = {"q", "w", "e", "r", "t", "y", "u"};

//  адреса и размер массивов. Используется в загрузке картинок и функции thing
int ad_im[7][2];

ad_im[0][0] = address(#Image_q[0][0][0]); ad_im[0][1] = sizearray(Image_q);
ad_im[1][0] = address(#Image_w[0][0][0]); ad_im[1][1] = sizearray(Image_w);
ad_im[2][0] = address(#Image_e[0][0][0]); ad_im[2][1] = sizearray(Image_e);
ad_im[3][0] = address(#Image_r[0][0][0]); ad_im[3][1] = sizearray(Image_r);
ad_im[4][0] = address(#Image_t[0][0][0]); ad_im[4][1] = sizearray(Image_t);
ad_im[5][0] = address(#Image_y[0][0][0]); ad_im[5][1] = sizearray(Image_y);
ad_im[6][0] = address(#Image_u[0][0][0]); ad_im[6][1] = sizearray(Image_u);

/*

|-----------------Изображения---------------|

q0  - в инвентаре
q1  - класс персонажа (функция рестартов)
q2  - рука "взять" как подошли к сундуку или к предету на земле
q3  - сундук
q4  - полоска загрузки локации
q5  - белые пиксели книжки (прогрузка локации)
q6  - панелька локации "камень"
q7  - панелька локации "дом"
q8  - панелька локации "лес"
q9  - пустая ячейка инвентаря
q10 - прошло кд хила (1 скил)
q11 - инвентарь убитого моба
q12 - Замочек над персонажем при открытие сундука
q13 - сырое мясо
q14 - подтвердить удаление предмета
q15 - прошло кд хила (2 скил)
q16 - смерть персонажа
q17 - камень на земле
q18 - бревно на земле
q19 - инвентарь крафта
q20 - возможность скрафтить копье, мешок или топор
q21 - недоступная кнопка сложить все
q22 - почему лучше играть с друзьями
q23 - доступная кнопка взять

w0 -  кирка
w1 -  топор
w2 -  копье (корды проверки хп копья)
w3 -  мешок
w4 -  посох на хил

e0 - спавн менеджера (сверху)
e1 - спавн воина     (справа)
e2 - спавн воина     (слева)
e3 - спавн воина     (снизу)

r0 - событие "руины города мертвых"
r1 - событие "захоронение"
r2 - событие "сокровище друидов"
r3 - событие "сокровище огненных великанов"
r4 - событие "Разломы хельхейма"

t0 - жареное мясо
t1 - мясная ножка
t2 - бутылка воды
t3 - сушеное мясо (бекон)
t4 - рагу из моркови
t5 - брусника

y0 - косточка от мясной ножки
y1 - пустая бутылка воды
y2 - лист
y3 - семечки
y4 - камень 2x
y5 - бревно 2x

u0 - тотем лечения
u1 - бинт
u2 - бутылка лечебного бальзама (+)

|---------------Символьные базы-------------|

0 - удалить как адаптируешь под проект

*/

//  серые пиксели на карте, сено под ногами             , дерево под ногами           , пиксели сундука               , красные пиксели мобов
int c_mgray[1]={7895160}  , c_seno[2]={6586526, 5862549}, c_wood[2]={6125437, 5204593}, c_chest[2]={2898512, 11179405}, c_enemy[1]={9079807};

//  пиксель полоски имени   , пиксель моего хп     , зеленые пиксели выхода с локации, полоска хп врага        , уровень хп предмета
int c_nenemy[1] = {16777215}, c_myhp[1] = {1881194}, c_exitl[1]={2529314}            , c_hpenemy[1] = {1850036}, c_hp_item[1] = {7517048};

//  пиксели сундуков на карте                , желтая полоска хп оленя, полоска хп трелла для последнего удара
int c_lchest[3] = {6390419, 5679545, 4481643}, c_hpdeer[1]={65015}    , c_thrl[2]={254, 4934475};

//  смотри по константам выше. Некоторые функции испольуют то же число пикселей
int 1_px[1] = {1}, 1_1_px[2] = {1, 1}, sc_mgray[1]={3}, sc_nenemy[1] = {5}, sc_exitl[1]={9}, sc_lchest[3] = {2, 2, 2};

//  пиксели дерева под ногами
int sc_wood[2] = {2, 2};

// инструкции на удаление и проч. в сундуках
int it_i[6][4]; string it_s[6][2];

it_s[0][0] = "eat";    it_s[0][1] = "chest";     it_i[0][0] = 1; it_i[0][1] = 0; it_i[0][2] = 4; it_i[0][3] = 4; // еда
it_s[1][0] = "delete"; it_s[1][1] = "chest";     it_i[1][0] = 1; it_i[1][1] = 0; it_i[1][2] = 1; it_i[1][3] = 5; // мусор
it_s[2][0] = "delete"; it_s[2][1] = "chest";     it_i[2][0] = 1; it_i[2][1] = 0; it_i[2][2] = 2; it_i[2][3] = 1; // инструменты
it_s[3][0] = "eat";    it_s[3][1] = "inventory"; it_i[3][0] = 1; it_i[3][1] = 5; it_i[3][2] = 5; it_i[3][3] = 4;
it_s[4][0] = "delete"; it_s[4][1] = "inventory"; it_i[4][0] = 1; it_i[4][1] = 2; it_i[4][2] = 3; it_i[4][3] = 5;
it_s[5][0] = "delete"; it_s[5][1] = "inventory"; it_i[5][0] = 2; it_i[5][1] = 4; it_i[5][2] = 5; it_i[5][3] = 5;

/*

 |--------Передвижение, сканирование--------|

 0 - право верх, 1 - право низ, 2 лево верх, 3 - лево низ

*/

int xy_move[4][2]; // прямое движение в 4х направлениях

xy_move[0][0] = 310; xy_move[0][1] = 682;
xy_move[1][0] = 310; xy_move[1][1] = 841;
xy_move[2][0] = 151; xy_move[2][1] = 682;
xy_move[3][0] = 151; xy_move[3][1] = 841;

int xy_circl[4][4]; // координаты сканирования вокруг персонажа

xy_circl[0][0] = 588; xy_circl[0][1] = 59; xy_circl[0][2] = 591; xy_circl[0][3] = 62;
xy_circl[1][0] = 588; xy_circl[1][1] = 65; xy_circl[1][2] = 591; xy_circl[1][3] = 68;
xy_circl[2][0] = 582; xy_circl[2][1] = 59; xy_circl[2][2] = 585; xy_circl[2][3] = 62;
xy_circl[3][0] = 582; xy_circl[3][1] = 65; xy_circl[3][2] = 585; xy_circl[3][3] = 68;

int xy_stic[4][4]; // сканирование залипания по направлению движения

xy_stic[0][0] = 366; xy_stic[0][1] = 143; xy_stic[0][2] = 381; xy_stic[0][3] = 157;
xy_stic[1][0] = 366; xy_stic[1][1] = 243; xy_stic[1][2] = 381; xy_stic[1][3] = 257;
xy_stic[2][0] = 266; xy_stic[2][1] = 143; xy_stic[2][2] = 281; xy_stic[2][3] = 157;
xy_stic[3][0] = 266; xy_stic[3][1] = 243; xy_stic[3][2] = 281; xy_stic[3][3] = 257;

int gpit[4][4]; // зеленые пиксели в дали по направлению движения

gpit[0][0] = 612; gpit[0][1] = 28; gpit[0][2] = 618; gpit[0][3] = 33;
gpit[1][0] = 612; gpit[1][1] = 93; gpit[1][2] = 618; gpit[1][3] = 98;
gpit[2][0] = 556; gpit[2][1] = 28; gpit[2][2] = 562; gpit[2][3] = 33;
gpit[3][0] = 556; gpit[3][1] = 93; gpit[3][2] = 562; gpit[3][3] = 98;

/*

|------------------Диалоги------------------|

*/

//  был ли получен указатель для теста окна
int get_point = 0;

//  указатель на диалог 0
win dialog_0;

//  шрифт
int font = CreateFont(-11, 0, 0, 0, 440, 0, 0, 0, 3, 0, 5, 0, 0, "Times New Roman");

//  элементы осн. диалога
int main_d[6];

// локации для фарма

int ps_combo_farm[1][4];
string t_combo_farm[1][1];
int s_combo_farm[1] = {1};
int f_combo_farm[1] = {0};

ps_combo_farm[0][0] = 88; ps_combo_farm[0][1] = 34; ps_combo_farm[0][2] = 105; ps_combo_farm[0][3] = 80;
t_combo_farm[0][0] = "Forest";

// галка логи

int ps_check[2][4];
string txt_check[2];
int f_check[2];

ps_check[0][0] = 10; ps_check[0][1] = 60; ps_check[0][2] = 90; ps_check[0][3] = 20;
ps_check[1][0] = 10; ps_check[1][1] = 83; ps_check[1][2] = 125; ps_check[1][3] = 20;
txt_check[0] = "Logging"; 
txt_check[1] = "Image output"; 
f_check[0] = 1;
f_check[1] = 0;